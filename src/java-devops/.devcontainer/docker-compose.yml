version: '3.8'

volumes:
  sonarqube-data:
  sonarqube-logs:
  sonarqube-extensions:
  jenkins_home:

services:
  app:
    container_name: javaandsonarqube
    build: 
      context: .
      dockerfile: Dockerfile
    #environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in db container
    #      ACCEPT_EULA: Y
    #      MSSQL_SA_PASSWORD: P@ssw0rd
    network_mode: service:jenkins

    volumes:
      - ../..:/workspaces:cached
      
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:sonarqube

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  sonarqube:
    container_name: sonarqube-container
    image: sonarqube:lts-developer
    restart: unless-stopped
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-extensions:/opt/sonarqube/extensions
    network_mode: service:jenkins
    #environment:
      # NOTE: POSTGRES_DB/USER/PASSWORD should match values in app container
      #ACCEPT_EULA: Y
      #MSSQL_SA_PASSWORD: P@ssw0rd

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
  
  
  jenkins:
    container_name: jenkins-container
    image: jenkins/jenkins:lts-jdk17
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
  
  jenkins-ssh-agent:
    image: jenkins/ssh-agent
    restart: unless-stopped
    